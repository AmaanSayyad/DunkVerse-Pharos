"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/utils/metamask.ts":
/*!*******************************!*\
  !*** ./src/utils/metamask.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   acceptInvitation: function() { return /* binding */ acceptInvitation; },\n/* harmony export */   connectMetaMask: function() { return /* binding */ connectMetaMask; },\n/* harmony export */   inviteFriend: function() { return /* binding */ inviteFriend; },\n/* harmony export */   listenToInvitationSent: function() { return /* binding */ listenToInvitationSent; }\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n\n// Connect to MetaMask\nasync function connectMetaMask() {\n    if (window.ethereum) {\n        try {\n            await window.ethereum.request({\n                method: \"eth_requestAccounts\"\n            });\n            const provider = new ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.providers.Web3Provider(window.ethereum);\n            const signer = provider.getSigner();\n            return signer;\n        } catch (error) {\n            console.error(\"User denied account access\");\n        }\n    } else {\n        console.error(\"MetaMask not installed\");\n    }\n}\n// Contract address and ABI\nconst contractAddress = \"0x4E839b2d73BDB6B730299b7f5a28Acf6f949e2a9\";\nconst abi = [\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_dunkVerseToken\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"invitee\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"InvitationAccepted\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"inviter\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"invitee\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"InvitationSent\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"acceptInvitation\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"dunkVerseToken\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"invitee\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"invite\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"invited\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"tokens\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n];\n// Invite a friend\nasync function inviteFriend(invitee, amount) {\n    const signer = await connectMetaMask();\n    if (signer) {\n        const contract = new ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.Contract(contractAddress, abi, signer);\n        try {\n            await contract.invite(invitee, ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.utils.parseUnits(amount.toString(), 18));\n            console.log(\"Invitation sent to \".concat(invitee, \" for \").concat(amount, \" tokens\"));\n        } catch (error) {\n            if (error.code === ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.errors.UNPREDICTABLE_GAS_LIMIT) {\n                console.error(\"Transaction may fail or may require manual gas limit:\", error);\n                if (error.error && error.error.message.includes(\"Already invited\")) {\n                    alert(\"This address has already been invited.\");\n                } else {\n                    alert(\"An error occurred while sending the invitation.\");\n                }\n            } else if (error.data && error.data.message.includes(\"Already invited\")) {\n                alert(\"This address has already been invited.\");\n            } else {\n                console.error(\"An unexpected error occurred:\", error);\n                alert(\"An unexpected error occurred: \".concat(error.message));\n            }\n        }\n    }\n}\n// Accept invitation\nasync function acceptInvitation() {\n    const signer = await connectMetaMask();\n    if (signer) {\n        const contract = new ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.Contract(contractAddress, abi, signer);\n        try {\n            await contract.acceptInvitation();\n            // Redirect to your application\n            window.location.href = \"http://localhost:3000/\";\n        } catch (error) {\n            console.error(\"An error occurred while accepting the invitation:\", error);\n            if (error instanceof Error) {\n                alert(\"An error occurred while accepting the invitation: \".concat(error.message));\n            } else {\n                alert(\"An unknown error occurred while accepting the invitation.\");\n            }\n        }\n    }\n}\n// Listen to InvitationSent event\nasync function listenToInvitationSent() {\n    const provider = new ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.providers.Web3Provider(window.ethereum);\n    const contract = new ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.Contract(contractAddress, abi, provider);\n    contract.on(\"InvitationSent\", (inviter, invitee, amount)=>{\n        console.log(\"Invitation sent from \".concat(inviter, \" to \").concat(invitee, \" for \").concat(amount, \" tokens\"));\n        alert(\"Invitation sent from \".concat(inviter, \" to \").concat(invitee, \" for \").concat(amount, \" tokens\"));\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils/metamask.ts\n"));

/***/ })

});